{"ast":null,"code":"var _jsxFileName = \"/Users/perry/Desktop/budget-app/src/context/AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { loadInitialState, saveState } from \"./LocalStorage\"; // 6. The reducer - this is used to update the state, based on the action\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  let budget = 0;\n\n  switch (action.type) {\n    case \"ADD_EXPENSE\":\n      let total_budget = 0;\n      total_budget = state.expenses.reduce((previousExp, currentExp) => {\n        return previousExp + currentExp.cost;\n      }, 0);\n      total_budget = total_budget + action.payload.cost;\n      action.type = \"DONE\";\n\n      if (total_budget <= state.budget) {\n        total_budget = 0;\n        state.expenses.map(currentExp => {\n          if (currentExp.name === action.payload.name) {\n            currentExp.cost = action.payload.cost + currentExp.cost;\n          }\n\n          return currentExp;\n        });\n        return { ...state\n        };\n      } else {\n        Swal.fire({\n          position: \"top\",\n          title: \"Cannot increase the allocation!\",\n          text: \"Out of funds, or empty allocation.\",\n          icon: \"error\"\n        });\n        return { ...state\n        };\n      }\n\n    case \"RED_EXPENSE\":\n      const red_expenses = state.expenses.map(currentExp => {\n        if (currentExp.name === action.payload.name && currentExp.cost - action.payload.cost >= 0) {\n          currentExp.cost = currentExp.cost - action.payload.cost;\n          budget = state.budget + action.payload.cost;\n        }\n\n        return currentExp;\n      });\n      action.type = \"DONE\";\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case \"DELETE_EXPENSE\":\n      action.type = \"DONE\";\n      state.expenses.map(currentExp => {\n        if (currentExp.name === action.payload) {\n          budget = state.budget + currentExp.cost;\n          currentExp.cost = 0;\n        }\n\n        return currentExp;\n      });\n      action.type = \"DONE\";\n      return { ...state,\n        budget\n      };\n\n    case \"SET_BUDGET\":\n      action.type = \"DONE\";\n      state.budget = action.payload;\n      return { ...state\n      };\n\n    case \"CHG_CURRENCY\":\n      action.type = \"DONE\";\n      state.currency = action.payload;\n      return { ...state\n      };\n\n    case \"ADD_DEPARTMENT\":\n      action.type = \"DONE\";\n      state.expenses = [...state.expenses, action.payload];\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}; // 1. Department names declaration for the dropdown option\n\n_c = AppReducer;\nconst deptOption = [{\n  value: \"Marketing\",\n  label: \"Marketing\"\n}, {\n  value: \"Finance\",\n  label: \"Finance\"\n}, {\n  value: \"Sales\",\n  label: \"Sales\"\n}, {\n  value: \"Human Resource\",\n  label: \"HR\"\n}, {\n  value: \"Research & Development\",\n  label: \"R&D\"\n}, {\n  value: \"IT\",\n  label: \"IT\"\n}, {\n  value: \"Logistic\",\n  label: \"Logistic\"\n}, {\n  value: \"Engineering\",\n  label: \"ENG\"\n}, {\n  value: \"Production\",\n  label: \"PRO\"\n}]; // 2. Sets the initial state when the app loads\n\nconst initialState = {\n  budget: 999999,\n  expenses: [{\n    id: \"Marketing\",\n    name: \"Marketing\",\n    cost: 50000\n  }, {\n    id: \"Finance\",\n    name: \"Finance\",\n    cost: 9500\n  }, {\n    id: \"Sales\",\n    name: \"Sales\",\n    cost: 77000\n  }, {\n    id: \"Human Resource\",\n    name: \"Human Resource\",\n    cost: 40500\n  }, {\n    id: \"Research & Development\",\n    name: \"Research & Development\",\n    cost: 19900\n  }, {\n    id: \"IT\",\n    name: \"IT\",\n    cost: 84000\n  }, {\n    id: \"Logistic\",\n    name: \"Logistic\",\n    cost: 33000\n  }, {\n    id: \"Engineering\",\n    name: \"Engineering\",\n    cost: 62000\n  }, {\n    id: \"Production\",\n    name: \"Production\",\n    cost: 144000\n  }],\n  deptOption,\n  currency: \"Â£\"\n};\nconst persistedState = loadInitialState(initialState); // Save initial state to LocalStorage\n// 3. Creates the context this is the thing our components import and use to get the state\n\nexport const AppContext = /*#__PURE__*/createContext(); // 4. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\n\nexport const AppProvider = props => {\n  _s();\n\n  // 5. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState, persistedState);\n  let remaining = 0;\n\n  if (state.expenses) {\n    const totalExpenses = state.expenses.reduce((total, item) => {\n      return total = total + item.cost;\n    }, 0);\n    remaining = state.budget - totalExpenses;\n  } // Save state to LocalStorage\n\n\n  saveState(persistedState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses: state.expenses,\n      budget: state.budget,\n      remaining: remaining,\n      deptOption: state.deptOption,\n      currency: state.currency,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c2 = AppProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","Swal","loadInitialState","saveState","AppReducer","state","action","budget","type","total_budget","expenses","reduce","previousExp","currentExp","cost","payload","map","name","fire","position","title","text","icon","red_expenses","currency","deptOption","value","label","initialState","id","persistedState","AppContext","AppProvider","props","dispatch","remaining","totalExpenses","total","item","children"],"sources":["/Users/perry/Desktop/budget-app/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { loadInitialState, saveState } from \"./LocalStorage\";\n\n// 6. The reducer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n  let budget = 0;\n\n  switch (action.type) {\n    case \"ADD_EXPENSE\":\n      let total_budget = 0;\n      total_budget = state.expenses.reduce((previousExp, currentExp) => {\n        return previousExp + currentExp.cost;\n      }, 0);\n      total_budget = total_budget + action.payload.cost;\n      action.type = \"DONE\";\n\n      if (total_budget <= state.budget) {\n        total_budget = 0;\n        state.expenses.map((currentExp) => {\n          if (currentExp.name === action.payload.name) {\n            currentExp.cost = action.payload.cost + currentExp.cost;\n          }\n          return currentExp;\n        });\n        return {\n          ...state,\n        };\n      } else {\n        Swal.fire({\n          position: \"top\",\n          title: \"Cannot increase the allocation!\",\n          text: \"Out of funds, or empty allocation.\",\n          icon: \"error\",\n        });\n\n        return {\n          ...state,\n        };\n      }\n    case \"RED_EXPENSE\":\n      const red_expenses = state.expenses.map((currentExp) => {\n        if (\n          currentExp.name === action.payload.name &&\n          currentExp.cost - action.payload.cost >= 0\n        ) {\n          currentExp.cost = currentExp.cost - action.payload.cost;\n          budget = state.budget + action.payload.cost;\n        }\n        return currentExp;\n      });\n      action.type = \"DONE\";\n      return {\n        ...state,\n        expenses: [...state.expenses, action.payload],\n      };\n    case \"DELETE_EXPENSE\":\n      action.type = \"DONE\";\n      state.expenses.map((currentExp) => {\n        if (currentExp.name === action.payload) {\n          budget = state.budget + currentExp.cost;\n          currentExp.cost = 0;\n        }\n        return currentExp;\n      });\n      action.type = \"DONE\";\n      return {\n        ...state,\n        budget,\n      };\n    case \"SET_BUDGET\":\n      action.type = \"DONE\";\n      state.budget = action.payload;\n      return {\n        ...state,\n      };\n    case \"CHG_CURRENCY\":\n      action.type = \"DONE\";\n      state.currency = action.payload;\n      return {\n        ...state,\n      };\n    case \"ADD_DEPARTMENT\":\n      action.type = \"DONE\";\n      state.expenses =  [...state.expenses, action.payload];\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\n// 1. Department names declaration for the dropdown option\nconst deptOption = [\n  { value: \"Marketing\", label: \"Marketing\" },\n  { value: \"Finance\", label: \"Finance\" },\n  { value: \"Sales\", label: \"Sales\" },\n  { value: \"Human Resource\", label: \"HR\" },\n  { value: \"Research & Development\", label: \"R&D\" },\n  { value: \"IT\", label: \"IT\" },\n  { value: \"Logistic\", label: \"Logistic\" },\n  { value: \"Engineering\", label: \"ENG\" },\n  { value: \"Production\", label: \"PRO\" },\n];\n\n// 2. Sets the initial state when the app loads\nconst initialState = {\n  budget: 999999,\n  expenses: [\n    { \n      id: \"Marketing\", \n      name: \"Marketing\", \n      cost: 50000 \n    },\n    { \n      id: \"Finance\", \n      name: \"Finance\", \n      cost: 9500 \n    },\n    { \n      id: \"Sales\", \n      name: \"Sales\", \n      cost: 77000 \n    },\n    { \n      id: \"Human Resource\", \n      name: \"Human Resource\", \n      cost: 40500 \n    },\n    {\n      id: \"Research & Development\",\n      name: \"Research & Development\",\n      cost: 19900,\n    },\n    { \n      id: \"IT\", \n      name: \"IT\", \n      cost: 84000 \n    },\n    { \n      id: \"Logistic\",\n      name: \"Logistic\", \n      cost: 33000 \n    },\n    { \n      id: \"Engineering\", \n      name: \"Engineering\", \n      cost: 62000 \n    },\n    { \n      id: \"Production\", \n      name: \"Production\", \n      cost: 144000 \n    },\n  ],\n  deptOption,\n  currency: \"Â£\",\n};\n\nconst persistedState = loadInitialState(initialState);\n // Save initial state to LocalStorage\n\n\n// 3. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 4. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n  // 5. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState, persistedState);\n  let remaining = 0;\n\n  if (state.expenses) {\n    const totalExpenses = state.expenses.reduce((total, item) => {\n      return (total = total + item.cost);\n    }, 0);\n    remaining = state.budget - totalExpenses;\n  }\n\n  // Save state to LocalStorage\n  saveState(persistedState);\n\n  return (\n    <AppContext.Provider\n      value={{\n        expenses: state.expenses,\n        budget: state.budget,\n        remaining: remaining,\n        deptOption: state.deptOption,\n        currency: state.currency,\n        dispatch,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}